name: Test

on:
  - push

jobs:
  build-xdia:
    name: Build xdia on Windows
    runs-on: windows-latest
    steps:
    - uses: actions/setup-python@v5.1.0
      with:
        python-version: '3.10'
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Build
      run: |
        cmake -Ssrc/xdia -Bbuild -Ax64
        cmake --build build --config Release --parallel --verbose
        cmake --install build --prefix dist
    - name: Test
      shell: bash
      run: |
        MSDIA_PATH=$PWD/dist/bin/msdia140.dll ./dist/bin/xdia.exe ./tests/hello-wdm.pdb
    - uses: actions/upload-artifact@v4
      with:
        name: xdia
        path: dist

  build-xdialdr:
    name: Build xdialdr on Ubuntu
    runs-on: ubuntu-latest
    needs: build-xdia
    steps:
    - uses: actions/setup-python@v5.1.0
      with:
        python-version: '3.10'
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: actions/download-artifact@v4
      with:
        name: xdia
        path: xdia
    - name: Build
      run: |
        cmake -Bbuild -S.
        cmake --build build --target xdialdr
        cmake --install build --prefix dist
    - name: Test
      run: |
        export MSDIA_PATH=$PWD/xdia/bin/msdia140.dll
        export XDIA_PATH=$PWD/xdia/bin/xdia.exe
        ./dist/bin/xdialdr ./tests/hello-wdm.pdb
    - uses: actions/upload-artifact@v4
      with:
        name: xdialdr
        path: dist

  build-wheels:
    needs: ["build-xdia", "build-xdialdr"]
    name: Build wheel ${{ matrix.wheel }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - { arch: arm64,  wheel: cp310-macosx_arm64,     os: macos-latest   }
          - { arch: x86_64, wheel: cp310-macosx_x86_64,    os: macos-13       }
          - { arch: x86_64, wheel: cp310-manylinux_x86_64, os: ubuntu-latest  }
          - { arch: x86_64, wheel: cp310-win_amd64,        os: windows-2019 }
    steps:
    # - name: Download source distribution
    #   uses: actions/download-artifact@v4.1.7
    #   with:
    #     name: source
    # - name: Unpack source distribution
    #   shell: bash
    #   run: tar --strip-components 1 -xvf *.tar.gz
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: actions/download-artifact@v4
      with:
        merge-multiple: true
        path: pyxdia/pyxdia
    - name: Build wheel
      uses: pypa/cibuildwheel@v2.17.0
      with:
        package-dir: pyxdia
        output-dir: wheelhouse
      env:
        CIBW_ARCHS_MACOS: ${{ matrix.arch }}
        CIBW_BUILD: ${{ matrix.wheel }}
        # CIBW_TEST_COMMAND: python -m unittest discover -v -s {package}/tests
        CIBW_TEST_COMMAND: python -m pyxdia {project}/tests/hello-wdm.pdb
        CIBW_BUILD_VERBOSITY: 1
    - uses: actions/upload-artifact@v4.3.3
      with:
        name: ${{ matrix.wheel }}
        path: ./wheelhouse/*.whl